/*
 * Copyright 2009-2010 WSO2, Inc. (http://wso2.com)
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.wso2.carbonstudio.eclipse.esb.mediator.provider;

import java.util.ArrayList;
import java.util.Collection;

import org.eclipse.emf.common.notify.Adapter;
import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.Notifier;
import org.eclipse.emf.edit.provider.ChangeNotifier;
import org.eclipse.emf.edit.provider.ComposeableAdapterFactory;
import org.eclipse.emf.edit.provider.ComposedAdapterFactory;
import org.eclipse.emf.edit.provider.IChangeNotifier;
import org.eclipse.emf.edit.provider.IDisposable;
import org.eclipse.emf.edit.provider.IEditingDomainItemProvider;
import org.eclipse.emf.edit.provider.IItemLabelProvider;
import org.eclipse.emf.edit.provider.IItemPropertySource;
import org.eclipse.emf.edit.provider.INotifyChangedListener;
import org.eclipse.emf.edit.provider.IStructuredItemContentProvider;
import org.eclipse.emf.edit.provider.ITreeItemContentProvider;
import org.wso2.carbonstudio.eclipse.esb.CustomDelegatingItemProvider;
import org.wso2.carbonstudio.eclipse.esb.mediator.util.MediatorAdapterFactory;
import org.wso2.carbonstudio.eclipse.esb.provider.ModelObjectItemProvider;

/**
 * This is the factory that is used to provide the interfaces needed to support Viewers.
 * The adapters generated by this factory convert EMF adapter notifications into calls to {@link #fireNotifyChanged fireNotifyChanged}.
 * The adapters also support Eclipse property sheets.
 * Note that most of the adapters are shared among multiple instances.
 * <!-- begin-user-doc -->
 * <!-- end-user-doc -->
 * @generated
 */
public class MediatorItemProviderAdapterFactory extends MediatorAdapterFactory implements ComposeableAdapterFactory, IChangeNotifier, IDisposable {
	/**
	 * This keeps track of the root adapter factory that delegates to this adapter factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ComposedAdapterFactory parentAdapterFactory;

	/**
	 * This is used to implement {@link org.eclipse.emf.edit.provider.IChangeNotifier}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IChangeNotifier changeNotifier = new ChangeNotifier();

	/**
	 * This keeps track of all the supported types checked by {@link #isFactoryForType isFactoryForType}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected Collection<Object> supportedTypes = new ArrayList<Object>();

	/**
	 * This constructs an instance.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public MediatorItemProviderAdapterFactory() {
		supportedTypes.add(IEditingDomainItemProvider.class);
		supportedTypes.add(IStructuredItemContentProvider.class);
		supportedTypes.add(ITreeItemContentProvider.class);
		supportedTypes.add(IItemLabelProvider.class);
		supportedTypes.add(IItemPropertySource.class);
	}

	/**
	 * {@inheritDoc}
	 */
    public Adapter createAdapter(Notifier target) {
	    Adapter adapter = super.createAdapter(target);
	    if (adapter instanceof ModelObjectItemProvider) {
	    	adapter = new CustomDelegatingItemProvider((ModelObjectItemProvider) adapter);
	    }
	    return adapter;
    }
	
	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.InMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected InMediatorItemProvider inMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.InMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createInMediatorAdapter() {
		if (inMediatorItemProvider == null) {
			inMediatorItemProvider = new InMediatorItemProvider(this);
		}

		return inMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.OutMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OutMediatorItemProvider outMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.OutMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOutMediatorAdapter() {
		if (outMediatorItemProvider == null) {
			outMediatorItemProvider = new OutMediatorItemProvider(this);
		}

		return outMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.DropMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DropMediatorItemProvider dropMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.DropMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDropMediatorAdapter() {
		if (dropMediatorItemProvider == null) {
			dropMediatorItemProvider = new DropMediatorItemProvider(this);
		}

		return dropMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SendMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SendMediatorItemProvider sendMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SendMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSendMediatorAdapter() {
		if (sendMediatorItemProvider == null) {
			sendMediatorItemProvider = new SendMediatorItemProvider(this);
		}

		return sendMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.LogMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogMediatorItemProvider logMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.LogMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogMediatorAdapter() {
		if (logMediatorItemProvider == null) {
			logMediatorItemProvider = new LogMediatorItemProvider(this);
		}

		return logMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.LogProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected LogPropertyItemProvider logPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.LogProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createLogPropertyAdapter() {
		if (logPropertyItemProvider == null) {
			logPropertyItemProvider = new LogPropertyItemProvider(this);
		}

		return logPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.FilterMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterMediatorItemProvider filterMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.FilterMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterMediatorAdapter() {
		if (filterMediatorItemProvider == null) {
			filterMediatorItemProvider = new FilterMediatorItemProvider(this);
		}

		return filterMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.FilterThenBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterThenBranchItemProvider filterThenBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.FilterThenBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterThenBranchAdapter() {
		if (filterThenBranchItemProvider == null) {
			filterThenBranchItemProvider = new FilterThenBranchItemProvider(this);
		}

		return filterThenBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.FilterElseBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FilterElseBranchItemProvider filterElseBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.FilterElseBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFilterElseBranchAdapter() {
		if (filterElseBranchItemProvider == null) {
			filterElseBranchItemProvider = new FilterElseBranchItemProvider(this);
		}

		return filterElseBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SwitchMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwitchMediatorItemProvider switchMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SwitchMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwitchMediatorAdapter() {
		if (switchMediatorItemProvider == null) {
			switchMediatorItemProvider = new SwitchMediatorItemProvider(this);
		}

		return switchMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SwitchCaseBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwitchCaseBranchItemProvider switchCaseBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SwitchCaseBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwitchCaseBranchAdapter() {
		if (switchCaseBranchItemProvider == null) {
			switchCaseBranchItemProvider = new SwitchCaseBranchItemProvider(this);
		}

		return switchCaseBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SwitchDefaultBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SwitchDefaultBranchItemProvider switchDefaultBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SwitchDefaultBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSwitchDefaultBranchAdapter() {
		if (switchDefaultBranchItemProvider == null) {
			switchDefaultBranchItemProvider = new SwitchDefaultBranchItemProvider(this);
		}

		return switchDefaultBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.EntitlementMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EntitlementMediatorItemProvider entitlementMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.EntitlementMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEntitlementMediatorAdapter() {
		if (entitlementMediatorItemProvider == null) {
			entitlementMediatorItemProvider = new EntitlementMediatorItemProvider(this);
		}

		return entitlementMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.EnqueueMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnqueueMediatorItemProvider enqueueMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.EnqueueMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnqueueMediatorAdapter() {
		if (enqueueMediatorItemProvider == null) {
			enqueueMediatorItemProvider = new EnqueueMediatorItemProvider(this);
		}

		return enqueueMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ClassMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassMediatorItemProvider classMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ClassMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassMediatorAdapter() {
		if (classMediatorItemProvider == null) {
			classMediatorItemProvider = new ClassMediatorItemProvider(this);
		}

		return classMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ClassProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ClassPropertyItemProvider classPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ClassProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createClassPropertyAdapter() {
		if (classPropertyItemProvider == null) {
			classPropertyItemProvider = new ClassPropertyItemProvider(this);
		}

		return classPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SpringMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SpringMediatorItemProvider springMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SpringMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSpringMediatorAdapter() {
		if (springMediatorItemProvider == null) {
			springMediatorItemProvider = new SpringMediatorItemProvider(this);
		}

		return springMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateMediatorItemProvider validateMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateMediatorAdapter() {
		if (validateMediatorItemProvider == null) {
			validateMediatorItemProvider = new ValidateMediatorItemProvider(this);
		}

		return validateMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateOnFailBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateOnFailBranchItemProvider validateOnFailBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateOnFailBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateOnFailBranchAdapter() {
		if (validateOnFailBranchItemProvider == null) {
			validateOnFailBranchItemProvider = new ValidateOnFailBranchItemProvider(this);
		}

		return validateOnFailBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateFeatureItemProvider validateFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateFeatureAdapter() {
		if (validateFeatureItemProvider == null) {
			validateFeatureItemProvider = new ValidateFeatureItemProvider(this);
		}

		return validateFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateSchema} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ValidateSchemaItemProvider validateSchemaItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ValidateSchema}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createValidateSchemaAdapter() {
		if (validateSchemaItemProvider == null) {
			validateSchemaItemProvider = new ValidateSchemaItemProvider(this);
		}

		return validateSchemaItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ScriptMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ScriptMediatorItemProvider scriptMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ScriptMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createScriptMediatorAdapter() {
		if (scriptMediatorItemProvider == null) {
			scriptMediatorItemProvider = new ScriptMediatorItemProvider(this);
		}

		return scriptMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SmooksMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SmooksMediatorItemProvider smooksMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SmooksMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSmooksMediatorAdapter() {
		if (smooksMediatorItemProvider == null) {
			smooksMediatorItemProvider = new SmooksMediatorItemProvider(this);
		}

		return smooksMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SmooksInConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SmooksInConfigurationItemProvider smooksInConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SmooksInConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSmooksInConfigurationAdapter() {
		if (smooksInConfigurationItemProvider == null) {
			smooksInConfigurationItemProvider = new SmooksInConfigurationItemProvider(this);
		}

		return smooksInConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SmooksOutConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SmooksOutConfigurationItemProvider smooksOutConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SmooksOutConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSmooksOutConfigurationAdapter() {
		if (smooksOutConfigurationItemProvider == null) {
			smooksOutConfigurationItemProvider = new SmooksOutConfigurationItemProvider(this);
		}

		return smooksOutConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.EnrichMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EnrichMediatorItemProvider enrichMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.EnrichMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEnrichMediatorAdapter() {
		if (enrichMediatorItemProvider == null) {
			enrichMediatorItemProvider = new EnrichMediatorItemProvider(this);
		}

		return enrichMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.FaultMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected FaultMediatorItemProvider faultMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.FaultMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createFaultMediatorAdapter() {
		if (faultMediatorItemProvider == null) {
			faultMediatorItemProvider = new FaultMediatorItemProvider(this);
		}

		return faultMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.AggregateMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateMediatorItemProvider aggregateMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.AggregateMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateMediatorAdapter() {
		if (aggregateMediatorItemProvider == null) {
			aggregateMediatorItemProvider = new AggregateMediatorItemProvider(this);
		}

		return aggregateMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.AggregateOnCompleteBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AggregateOnCompleteBranchItemProvider aggregateOnCompleteBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.AggregateOnCompleteBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAggregateOnCompleteBranchAdapter() {
		if (aggregateOnCompleteBranchItemProvider == null) {
			aggregateOnCompleteBranchItemProvider = new AggregateOnCompleteBranchItemProvider(this);
		}

		return aggregateOnCompleteBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RouterMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouterMediatorItemProvider routerMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RouterMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouterMediatorAdapter() {
		if (routerMediatorItemProvider == null) {
			routerMediatorItemProvider = new RouterMediatorItemProvider(this);
		}

		return routerMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RouterRoute} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouterRouteItemProvider routerRouteItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RouterRoute}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouterRouteAdapter() {
		if (routerRouteItemProvider == null) {
			routerRouteItemProvider = new RouterRouteItemProvider(this);
		}

		return routerRouteItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RouteTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RouteTargetItemProvider routeTargetItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RouteTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRouteTargetAdapter() {
		if (routeTargetItemProvider == null) {
			routeTargetItemProvider = new RouteTargetItemProvider(this);
		}

		return routeTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CloneMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CloneMediatorItemProvider cloneMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CloneMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCloneMediatorAdapter() {
		if (cloneMediatorItemProvider == null) {
			cloneMediatorItemProvider = new CloneMediatorItemProvider(this);
		}

		return cloneMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CloneTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CloneTargetItemProvider cloneTargetItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CloneTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCloneTargetAdapter() {
		if (cloneTargetItemProvider == null) {
			cloneTargetItemProvider = new CloneTargetItemProvider(this);
		}

		return cloneTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.IterateMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IterateMediatorItemProvider iterateMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.IterateMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIterateMediatorAdapter() {
		if (iterateMediatorItemProvider == null) {
			iterateMediatorItemProvider = new IterateMediatorItemProvider(this);
		}

		return iterateMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.IterateTarget} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected IterateTargetItemProvider iterateTargetItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.IterateTarget}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createIterateTargetAdapter() {
		if (iterateTargetItemProvider == null) {
			iterateTargetItemProvider = new IterateTargetItemProvider(this);
		}

		return iterateTargetItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CacheMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CacheMediatorItemProvider cacheMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CacheMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCacheMediatorAdapter() {
		if (cacheMediatorItemProvider == null) {
			cacheMediatorItemProvider = new CacheMediatorItemProvider(this);
		}

		return cacheMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CacheOnHitBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CacheOnHitBranchItemProvider cacheOnHitBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CacheOnHitBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCacheOnHitBranchAdapter() {
		if (cacheOnHitBranchItemProvider == null) {
			cacheOnHitBranchItemProvider = new CacheOnHitBranchItemProvider(this);
		}

		return cacheOnHitBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XSLTMediatorItemProvider xsltMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXSLTMediatorAdapter() {
		if (xsltMediatorItemProvider == null) {
			xsltMediatorItemProvider = new XSLTMediatorItemProvider(this);
		}

		return xsltMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XSLTPropertyItemProvider xsltPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXSLTPropertyAdapter() {
		if (xsltPropertyItemProvider == null) {
			xsltPropertyItemProvider = new XSLTPropertyItemProvider(this);
		}

		return xsltPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTFeature} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XSLTFeatureItemProvider xsltFeatureItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTFeature}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXSLTFeatureAdapter() {
		if (xsltFeatureItemProvider == null) {
			xsltFeatureItemProvider = new XSLTFeatureItemProvider(this);
		}

		return xsltFeatureItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTResource} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XSLTResourceItemProvider xsltResourceItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.XSLTResource}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXSLTResourceAdapter() {
		if (xsltResourceItemProvider == null) {
			xsltResourceItemProvider = new XSLTResourceItemProvider(this);
		}

		return xsltResourceItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.XQueryMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XQueryMediatorItemProvider xQueryMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.XQueryMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXQueryMediatorAdapter() {
		if (xQueryMediatorItemProvider == null) {
			xQueryMediatorItemProvider = new XQueryMediatorItemProvider(this);
		}

		return xQueryMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.XQueryVariable} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected XQueryVariableItemProvider xQueryVariableItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.XQueryVariable}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createXQueryVariableAdapter() {
		if (xQueryVariableItemProvider == null) {
			xQueryVariableItemProvider = new XQueryVariableItemProvider(this);
		}

		return xQueryVariableItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CalloutMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CalloutMediatorItemProvider calloutMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CalloutMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCalloutMediatorAdapter() {
		if (calloutMediatorItemProvider == null) {
			calloutMediatorItemProvider = new CalloutMediatorItemProvider(this);
		}

		return calloutMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RMSequenceMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RMSequenceMediatorItemProvider rmSequenceMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RMSequenceMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRMSequenceMediatorAdapter() {
		if (rmSequenceMediatorItemProvider == null) {
			rmSequenceMediatorItemProvider = new RMSequenceMediatorItemProvider(this);
		}

		return rmSequenceMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.TransactionMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected TransactionMediatorItemProvider transactionMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.TransactionMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createTransactionMediatorAdapter() {
		if (transactionMediatorItemProvider == null) {
			transactionMediatorItemProvider = new TransactionMediatorItemProvider(this);
		}

		return transactionMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.PropertyMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected PropertyMediatorItemProvider propertyMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.PropertyMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createPropertyMediatorAdapter() {
		if (propertyMediatorItemProvider == null) {
			propertyMediatorItemProvider = new PropertyMediatorItemProvider(this);
		}

		return propertyMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.OAuthMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected OAuthMediatorItemProvider oAuthMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.OAuthMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createOAuthMediatorAdapter() {
		if (oAuthMediatorItemProvider == null) {
			oAuthMediatorItemProvider = new OAuthMediatorItemProvider(this);
		}

		return oAuthMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.AutoscaleInMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutoscaleInMediatorItemProvider autoscaleInMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.AutoscaleInMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutoscaleInMediatorAdapter() {
		if (autoscaleInMediatorItemProvider == null) {
			autoscaleInMediatorItemProvider = new AutoscaleInMediatorItemProvider(this);
		}

		return autoscaleInMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.AutoscaleOutMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected AutoscaleOutMediatorItemProvider autoscaleOutMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.AutoscaleOutMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createAutoscaleOutMediatorAdapter() {
		if (autoscaleOutMediatorItemProvider == null) {
			autoscaleOutMediatorItemProvider = new AutoscaleOutMediatorItemProvider(this);
		}

		return autoscaleOutMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.HeaderMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected HeaderMediatorItemProvider headerMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.HeaderMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createHeaderMediatorAdapter() {
		if (headerMediatorItemProvider == null) {
			headerMediatorItemProvider = new HeaderMediatorItemProvider(this);
		}

		return headerMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottleMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrottleMediatorItemProvider throttleMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottleMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrottleMediatorAdapter() {
		if (throttleMediatorItemProvider == null) {
			throttleMediatorItemProvider = new ThrottleMediatorItemProvider(this);
		}

		return throttleMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottlePolicyConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrottlePolicyConfigurationItemProvider throttlePolicyConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottlePolicyConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrottlePolicyConfigurationAdapter() {
		if (throttlePolicyConfigurationItemProvider == null) {
			throttlePolicyConfigurationItemProvider = new ThrottlePolicyConfigurationItemProvider(this);
		}

		return throttlePolicyConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottleOnAcceptBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrottleOnAcceptBranchItemProvider throttleOnAcceptBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottleOnAcceptBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrottleOnAcceptBranchAdapter() {
		if (throttleOnAcceptBranchItemProvider == null) {
			throttleOnAcceptBranchItemProvider = new ThrottleOnAcceptBranchItemProvider(this);
		}

		return throttleOnAcceptBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottleOnRejectBranch} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrottleOnRejectBranchItemProvider throttleOnRejectBranchItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottleOnRejectBranch}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrottleOnRejectBranchAdapter() {
		if (throttleOnRejectBranchItemProvider == null) {
			throttleOnRejectBranchItemProvider = new ThrottleOnRejectBranchItemProvider(this);
		}

		return throttleOnRejectBranchItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottlePolicyEntry} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected ThrottlePolicyEntryItemProvider throttlePolicyEntryItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.ThrottlePolicyEntry}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createThrottlePolicyEntryAdapter() {
		if (throttlePolicyEntryItemProvider == null) {
			throttlePolicyEntryItemProvider = new ThrottlePolicyEntryItemProvider(this);
		}

		return throttlePolicyEntryItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CommandMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandMediatorItemProvider commandMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CommandMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandMediatorAdapter() {
		if (commandMediatorItemProvider == null) {
			commandMediatorItemProvider = new CommandMediatorItemProvider(this);
		}

		return commandMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.CommandProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected CommandPropertyItemProvider commandPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.CommandProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createCommandPropertyAdapter() {
		if (commandPropertyItemProvider == null) {
			commandPropertyItemProvider = new CommandPropertyItemProvider(this);
		}

		return commandPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.EventMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected EventMediatorItemProvider eventMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.EventMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createEventMediatorAdapter() {
		if (eventMediatorItemProvider == null) {
			eventMediatorItemProvider = new EventMediatorItemProvider(this);
		}

		return eventMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SqlStatement} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SqlStatementItemProvider sqlStatementItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SqlStatement}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSqlStatementAdapter() {
		if (sqlStatementItemProvider == null) {
			sqlStatementItemProvider = new SqlStatementItemProvider(this);
		}

		return sqlStatementItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SqlParameterDefinition} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SqlParameterDefinitionItemProvider sqlParameterDefinitionItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SqlParameterDefinition}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSqlParameterDefinitionAdapter() {
		if (sqlParameterDefinitionItemProvider == null) {
			sqlParameterDefinitionItemProvider = new SqlParameterDefinitionItemProvider(this);
		}

		return sqlParameterDefinitionItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SqlResultMapping} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SqlResultMappingItemProvider sqlResultMappingItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SqlResultMapping}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSqlResultMappingAdapter() {
		if (sqlResultMappingItemProvider == null) {
			sqlResultMappingItemProvider = new SqlResultMappingItemProvider(this);
		}

		return sqlResultMappingItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.DBLookupMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DBLookupMediatorItemProvider dbLookupMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.DBLookupMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDBLookupMediatorAdapter() {
		if (dbLookupMediatorItemProvider == null) {
			dbLookupMediatorItemProvider = new DBLookupMediatorItemProvider(this);
		}

		return dbLookupMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.DBReportMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected DBReportMediatorItemProvider dbReportMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.DBReportMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createDBReportMediatorAdapter() {
		if (dbReportMediatorItemProvider == null) {
			dbReportMediatorItemProvider = new DBReportMediatorItemProvider(this);
		}

		return dbReportMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleMediatorItemProvider ruleMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleMediatorAdapter() {
		if (ruleMediatorItemProvider == null) {
			ruleMediatorItemProvider = new RuleMediatorItemProvider(this);
		}

		return ruleMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSetConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleSetConfigurationItemProvider ruleSetConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSetConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleSetConfigurationAdapter() {
		if (ruleSetConfigurationItemProvider == null) {
			ruleSetConfigurationItemProvider = new RuleSetConfigurationItemProvider(this);
		}

		return ruleSetConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSetCreationProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleSetCreationPropertyItemProvider ruleSetCreationPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSetCreationProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleSetCreationPropertyAdapter() {
		if (ruleSetCreationPropertyItemProvider == null) {
			ruleSetCreationPropertyItemProvider = new RuleSetCreationPropertyItemProvider(this);
		}

		return ruleSetCreationPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSessionConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleSessionConfigurationItemProvider ruleSessionConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSessionConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleSessionConfigurationAdapter() {
		if (ruleSessionConfigurationItemProvider == null) {
			ruleSessionConfigurationItemProvider = new RuleSessionConfigurationItemProvider(this);
		}

		return ruleSessionConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSessionProperty} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleSessionPropertyItemProvider ruleSessionPropertyItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleSessionProperty}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleSessionPropertyAdapter() {
		if (ruleSessionPropertyItemProvider == null) {
			ruleSessionPropertyItemProvider = new RuleSessionPropertyItemProvider(this);
		}

		return ruleSessionPropertyItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleFactsConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleFactsConfigurationItemProvider ruleFactsConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleFactsConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleFactsConfigurationAdapter() {
		if (ruleFactsConfigurationItemProvider == null) {
			ruleFactsConfigurationItemProvider = new RuleFactsConfigurationItemProvider(this);
		}

		return ruleFactsConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleFact} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleFactItemProvider ruleFactItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleFact}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleFactAdapter() {
		if (ruleFactItemProvider == null) {
			ruleFactItemProvider = new RuleFactItemProvider(this);
		}

		return ruleFactItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleResultsConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleResultsConfigurationItemProvider ruleResultsConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleResultsConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleResultsConfigurationAdapter() {
		if (ruleResultsConfigurationItemProvider == null) {
			ruleResultsConfigurationItemProvider = new RuleResultsConfigurationItemProvider(this);
		}

		return ruleResultsConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleResult} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleResultItemProvider ruleResultItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleResult}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleResultAdapter() {
		if (ruleResultItemProvider == null) {
			ruleResultItemProvider = new RuleResultItemProvider(this);
		}

		return ruleResultItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleChildMediatorsConfiguration} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected RuleChildMediatorsConfigurationItemProvider ruleChildMediatorsConfigurationItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.RuleChildMediatorsConfiguration}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createRuleChildMediatorsConfigurationAdapter() {
		if (ruleChildMediatorsConfigurationItemProvider == null) {
			ruleChildMediatorsConfigurationItemProvider = new RuleChildMediatorsConfigurationItemProvider(this);
		}

		return ruleChildMediatorsConfigurationItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.SequenceMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected SequenceMediatorItemProvider sequenceMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.SequenceMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createSequenceMediatorAdapter() {
		if (sequenceMediatorItemProvider == null) {
			sequenceMediatorItemProvider = new SequenceMediatorItemProvider(this);
		}

		return sequenceMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.BuilderMediator} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected BuilderMediatorItemProvider builderMediatorItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.BuilderMediator}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createBuilderMediatorAdapter() {
		if (builderMediatorItemProvider == null) {
			builderMediatorItemProvider = new BuilderMediatorItemProvider(this);
		}

		return builderMediatorItemProvider;
	}

	/**
	 * This keeps track of the one adapter used for all {@link org.wso2.carbonstudio.eclipse.esb.mediator.MessageBuilder} instances.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	protected MessageBuilderItemProvider messageBuilderItemProvider;

	/**
	 * This creates an adapter for a {@link org.wso2.carbonstudio.eclipse.esb.mediator.MessageBuilder}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter createMessageBuilderAdapter() {
		if (messageBuilderItemProvider == null) {
			messageBuilderItemProvider = new MessageBuilderItemProvider(this);
		}

		return messageBuilderItemProvider;
	}

	/**
	 * This returns the root adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public ComposeableAdapterFactory getRootAdapterFactory() {
		return parentAdapterFactory == null ? this : parentAdapterFactory.getRootAdapterFactory();
	}

	/**
	 * This sets the composed adapter factory that contains this factory.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void setParentAdapterFactory(ComposedAdapterFactory parentAdapterFactory) {
		this.parentAdapterFactory = parentAdapterFactory;
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public boolean isFactoryForType(Object type) {
		return supportedTypes.contains(type) || super.isFactoryForType(type);
	}

	/**
	 * This implementation substitutes the factory itself as the key for the adapter.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Adapter adapt(Notifier notifier, Object type) {
		return super.adapt(notifier, this);
	}

	/**
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	@Override
	public Object adapt(Object object, Object type) {
		if (isFactoryForType(type)) {
			Object adapter = super.adapt(object, type);
			if (!(type instanceof Class<?>) || (((Class<?>)type).isInstance(adapter))) {
				return adapter;
			}
		}

		return null;
	}

	/**
	 * This adds a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void addListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.addListener(notifyChangedListener);
	}

	/**
	 * This removes a listener.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void removeListener(INotifyChangedListener notifyChangedListener) {
		changeNotifier.removeListener(notifyChangedListener);
	}

	/**
	 * This delegates to {@link #changeNotifier} and to {@link #parentAdapterFactory}.
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void fireNotifyChanged(Notification notification) {
		changeNotifier.fireNotifyChanged(notification);

		if (parentAdapterFactory != null) {
			parentAdapterFactory.fireNotifyChanged(notification);
		}
	}

	/**
	 * This disposes all of the item providers created by this factory. 
	 * <!-- begin-user-doc -->
	 * <!-- end-user-doc -->
	 * @generated
	 */
	public void dispose() {
		if (inMediatorItemProvider != null) inMediatorItemProvider.dispose();
		if (outMediatorItemProvider != null) outMediatorItemProvider.dispose();
		if (dropMediatorItemProvider != null) dropMediatorItemProvider.dispose();
		if (sendMediatorItemProvider != null) sendMediatorItemProvider.dispose();
		if (logMediatorItemProvider != null) logMediatorItemProvider.dispose();
		if (logPropertyItemProvider != null) logPropertyItemProvider.dispose();
		if (filterMediatorItemProvider != null) filterMediatorItemProvider.dispose();
		if (filterThenBranchItemProvider != null) filterThenBranchItemProvider.dispose();
		if (filterElseBranchItemProvider != null) filterElseBranchItemProvider.dispose();
		if (switchMediatorItemProvider != null) switchMediatorItemProvider.dispose();
		if (switchCaseBranchItemProvider != null) switchCaseBranchItemProvider.dispose();
		if (switchDefaultBranchItemProvider != null) switchDefaultBranchItemProvider.dispose();
		if (entitlementMediatorItemProvider != null) entitlementMediatorItemProvider.dispose();
		if (enqueueMediatorItemProvider != null) enqueueMediatorItemProvider.dispose();
		if (classMediatorItemProvider != null) classMediatorItemProvider.dispose();
		if (classPropertyItemProvider != null) classPropertyItemProvider.dispose();
		if (springMediatorItemProvider != null) springMediatorItemProvider.dispose();
		if (validateMediatorItemProvider != null) validateMediatorItemProvider.dispose();
		if (validateOnFailBranchItemProvider != null) validateOnFailBranchItemProvider.dispose();
		if (validateFeatureItemProvider != null) validateFeatureItemProvider.dispose();
		if (validateSchemaItemProvider != null) validateSchemaItemProvider.dispose();
		if (scriptMediatorItemProvider != null) scriptMediatorItemProvider.dispose();
		if (enrichMediatorItemProvider != null) enrichMediatorItemProvider.dispose();
		if (faultMediatorItemProvider != null) faultMediatorItemProvider.dispose();
		if (aggregateMediatorItemProvider != null) aggregateMediatorItemProvider.dispose();
		if (aggregateOnCompleteBranchItemProvider != null) aggregateOnCompleteBranchItemProvider.dispose();
		if (routerMediatorItemProvider != null) routerMediatorItemProvider.dispose();
		if (routerRouteItemProvider != null) routerRouteItemProvider.dispose();
		if (routeTargetItemProvider != null) routeTargetItemProvider.dispose();
		if (cloneMediatorItemProvider != null) cloneMediatorItemProvider.dispose();
		if (cloneTargetItemProvider != null) cloneTargetItemProvider.dispose();
		if (iterateMediatorItemProvider != null) iterateMediatorItemProvider.dispose();
		if (iterateTargetItemProvider != null) iterateTargetItemProvider.dispose();
		if (cacheMediatorItemProvider != null) cacheMediatorItemProvider.dispose();
		if (cacheOnHitBranchItemProvider != null) cacheOnHitBranchItemProvider.dispose();
		if (xsltMediatorItemProvider != null) xsltMediatorItemProvider.dispose();
		if (xsltPropertyItemProvider != null) xsltPropertyItemProvider.dispose();
		if (xsltFeatureItemProvider != null) xsltFeatureItemProvider.dispose();
		if (xsltResourceItemProvider != null) xsltResourceItemProvider.dispose();
		if (xQueryMediatorItemProvider != null) xQueryMediatorItemProvider.dispose();
		if (xQueryVariableItemProvider != null) xQueryVariableItemProvider.dispose();
		if (calloutMediatorItemProvider != null) calloutMediatorItemProvider.dispose();
		if (rmSequenceMediatorItemProvider != null) rmSequenceMediatorItemProvider.dispose();
		if (transactionMediatorItemProvider != null) transactionMediatorItemProvider.dispose();
		if (propertyMediatorItemProvider != null) propertyMediatorItemProvider.dispose();
		if (oAuthMediatorItemProvider != null) oAuthMediatorItemProvider.dispose();
		if (autoscaleInMediatorItemProvider != null) autoscaleInMediatorItemProvider.dispose();
		if (autoscaleOutMediatorItemProvider != null) autoscaleOutMediatorItemProvider.dispose();
		if (headerMediatorItemProvider != null) headerMediatorItemProvider.dispose();
		if (throttleMediatorItemProvider != null) throttleMediatorItemProvider.dispose();
		if (throttlePolicyConfigurationItemProvider != null) throttlePolicyConfigurationItemProvider.dispose();
		if (throttlePolicyEntryItemProvider != null) throttlePolicyEntryItemProvider.dispose();
		if (throttleOnAcceptBranchItemProvider != null) throttleOnAcceptBranchItemProvider.dispose();
		if (throttleOnRejectBranchItemProvider != null) throttleOnRejectBranchItemProvider.dispose();
		if (commandMediatorItemProvider != null) commandMediatorItemProvider.dispose();
		if (commandPropertyItemProvider != null) commandPropertyItemProvider.dispose();
		if (eventMediatorItemProvider != null) eventMediatorItemProvider.dispose();
		if (sqlStatementItemProvider != null) sqlStatementItemProvider.dispose();
		if (sqlParameterDefinitionItemProvider != null) sqlParameterDefinitionItemProvider.dispose();
		if (sqlResultMappingItemProvider != null) sqlResultMappingItemProvider.dispose();
		if (dbLookupMediatorItemProvider != null) dbLookupMediatorItemProvider.dispose();
		if (dbReportMediatorItemProvider != null) dbReportMediatorItemProvider.dispose();
		if (ruleMediatorItemProvider != null) ruleMediatorItemProvider.dispose();
		if (ruleSetConfigurationItemProvider != null) ruleSetConfigurationItemProvider.dispose();
		if (ruleSetCreationPropertyItemProvider != null) ruleSetCreationPropertyItemProvider.dispose();
		if (ruleSessionConfigurationItemProvider != null) ruleSessionConfigurationItemProvider.dispose();
		if (ruleSessionPropertyItemProvider != null) ruleSessionPropertyItemProvider.dispose();
		if (ruleFactsConfigurationItemProvider != null) ruleFactsConfigurationItemProvider.dispose();
		if (ruleFactItemProvider != null) ruleFactItemProvider.dispose();
		if (ruleResultsConfigurationItemProvider != null) ruleResultsConfigurationItemProvider.dispose();
		if (ruleResultItemProvider != null) ruleResultItemProvider.dispose();
		if (ruleChildMediatorsConfigurationItemProvider != null) ruleChildMediatorsConfigurationItemProvider.dispose();
		if (sequenceMediatorItemProvider != null) sequenceMediatorItemProvider.dispose();
		if (builderMediatorItemProvider != null) builderMediatorItemProvider.dispose();
		if (messageBuilderItemProvider != null) messageBuilderItemProvider.dispose();
		if (smooksMediatorItemProvider != null) smooksMediatorItemProvider.dispose();
		if (smooksInConfigurationItemProvider != null) smooksInConfigurationItemProvider.dispose();
		if (smooksOutConfigurationItemProvider != null) smooksOutConfigurationItemProvider.dispose();
	}

}
