<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com)
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
  <head></head>
  <body>
<h1>Generating the Client and Invoking the Service</h1>
<li>Go to the LocalTimeBot service you created first ,through the WSAS console and select the endpoints. WSAS supports ?wsdl of the services. So for the client creation of the service we will use the http://127.0.0.1:9763/services/LocalTimeBot?wsdl as the service definition. (the default port used is 9763, if you have specified a different port when creating a server instance please use that port here)</li>
<br/>
<br/>
<img alt="Project wizards" src="images/47.png"/>
<br/>
<br/>
<li>Now we'll generate the client for the newly created service by referring to the ?wsdl generated by the WSAS Server. Open File -> New -> Other... -> Web Services -> Web ServiceClient. Paste the URL that was copied earlier into the service definition field.</li>
<br/>
<br/>
<img alt="Project wizards" src="images/48.png"/>
<br/>
<br/>
<li>Change the web service runtime to WSO2 WSAS as before</li>
<br/>
<br/>
<img alt="Project wizards" src="images/49.png"/>
<br/>
<br/>
<li>
The next page is the Client Configuration Page. Accept the default values and click
<strong>Finish</strong>
.
</li>
<br/>
<br/>
<img alt="Project facets" src="images/50.png"/>
<br/>
<br/>
<li>This will create the client stubs for our MyDynamicProject.</li>
<br/>
<br/>
<img alt="Project wizards" src="images/51.png"/>
<br/>
<br/>
<li>Using the stub we will write the simple client program to invoke the service.</li>
<section><p><source>
package test; 

import java.rmi.RemoteException; 
import org.apache.axis2.AxisFault; 

public class LocalTimeBotClient { 
    public static void main(String[] args) { 
        LocalTimeBotStub stub; 
        try { 
            stub = new LocalTimeBotStub("http://localhost:9763/services/LocalTimeBot"); 
            LocalTimeBotStub.GetLocalTimeResponse res = stub.getLocalTime(); 
            System.out.println("Local Time :" + res.get_return()); 
        } catch (AxisFault e) { 
            e.printStackTrace(); 
        } catch (RemoteException e) { 
            e.printStackTrace(); 
        } 
     } 
}
</source></p></section>
<li>We can import the LocalTimeBotClient to TestWSProject</li>
<br/>
<br/>
<img alt="Project wizards" src="images/53.png"/>
<br/>
<br/>
<li>Compile and run the project.</li>
<br/>
<br/>
<img alt="Project wizards" src="images/54.png"/>
<br/>
<br/>
</body>
</html>
