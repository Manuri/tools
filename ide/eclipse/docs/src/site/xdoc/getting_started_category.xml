<!--
~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com) ~ ~ Licensed under
the Apache License, Version 2.0 (the "License"); ~ you may not use
this file except in compliance with the License. ~ You may obtain a
copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0
~ ~ Unless required by applicable law or agreed to in writing,
software ~ distributed under the License is distributed on an "AS IS"
BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
or implied. ~ See the License for the specific language governing
permissions and ~ limitations under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<body>

		<h1>Getting Started with Developer Studio</h1>
		<h2>Content</h2>
		<div class="toc">
			<ul>
				<li>
					<a href="#GettingStarted">Getting Started with Developer Studio</a>
				</li>
								<li>
					<a href="#ImportProjects">Import existing WSO2 Project types to WSO2 Developer Studio Workspace</a>
				</li>
			</ul>
		</div>
		<h2 id="GettingStarted">Getting Started with Developer Studio</h2>
		<!-- p>To create all the carbon artifacts, first you have to create a WSO2 Carbon Application. Before 
		creating a <strong>Carbon Project</strong>, make sure that you are in the <strong>Java EE</strong> 
		perspective if it is not set by default.To create a Carbon Application, 
		go to <strong>Fie -> New -> Project</strong> and select <strong>Carbon Application Project</strong>.
        </p-->
        <p>
		If you went through the <a href="overview.html">WSO2 Developer Studio Overview</a> page, you 
		may already know what you can do with <strong>WSO2 Developer Studio</strong>. 
        </p>
        <p>
        With the new version, main benefit is, you can create projects in any custom location as 
        you wish. Suppose I need to create my SOA application in a location which is sync with 
        my <strong>source control</strong>.
        </p>
        
        <p>
        Following images shows you the folder structure in my <strong>svn</strong> location and in my 
        <strong>local file system</strong>.
        </p>
		<p>
			<br></br>
			<img alt="New Server Runtime" src="images/gettingStarted1.png"></img>
			<br></br>
		</p>
		<p>
			<br></br>
			<img alt="New Server Runtime" src="images/gettingStarted2.png"></img>
			<br></br>
		</p>
		<p>
		Suppose <strong>AcmeSuper</strong> is a famous shopping complex which has branches all over the 
		country. For the sample, we will assume that <strong>AcmeSuper</strong> has branches at Colombo, 
		Galle and Kandy as showed in the above images. Let's see how we are going to create different
		 <strong>SOA</strong> applications in different locations.   
		</p>
		<p>
		Say I want to create an <strong>Apache Axis2 Service</strong> in <strong>Colombo</strong> branch. Let's see 
		how we can do that. 
		</p>
		<p>
		Below diagram shows you, how <strong>WSO2 Developer Studio</strong> looks like after installing to a 
		<strong>fresh Eclipse instance</strong>.
		</p>
		<p>
			<br></br>
			<img alt="New Server Runtime" src="images/gettingStarted4.png"></img>
			<br></br>
		</p>

		<p>
		Click on <strong>Axis2 Service Project</strong> link and you will see the following 
		<strong>Axis2 Service Creation</strong> wizard. 
		</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted5.png"></img>
				<br></br>
			</p>
			
		<p>
		Select the option you want to create the <strong>Apache Axis2 Project</strong> and go 
		to next page. For the example, I will select the <strong>Create New Axis2 Service</strong> 
		option. Give the necessary information for <strong>Project Name, Package Name and Class Name</strong>.
		</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted7.png"></img>
				<br></br>
			</p>
			<p>
			In the wizard page there is something called <strong>Location</strong> which will specify 
			where your project will be saved. It will select the <strong>Eclipse Workspace</strong> 
			location by default. But you can change it by <strong>un-tick</strong> the 
			<strong>Use Default Location</strong> option.
			</p>
			<p>
			Click on the <strong>Browse</strong> button and go to location of <strong>Colombo</strong> in 
			the file system. Note that we are creating a new project in the local file system which is 
			in-sync with our <strong>source control</strong>.
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted8.png"></img>
				<br></br>
			</p>				
			<p>
			After giving all the necessary information, your wizard page will look like below.
			</p>	
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted9.png"></img>
				<br></br>
			</p>
			<p>
			If you click <strong>Next</strong>, it will show you the <strong>Maven</strong> related 
			information. Those information will be filled for you by default. As a result, you can skip
			that page if you want. 
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted10.png"></img>
				<br></br>
			</p>	
			<p>
			Now you will see a new project has been created in the workspace. 
			</p>
				<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted11.png"></img>
				<br></br>
			</p>
			<p>
			Now let's go and see what happened in to the <strong>Colombo</strong> location 
			in my local file system.
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted12.png"></img>
				<br></br>
			</p>
			<p>
			As you can see, the project that we created has been added in to the location. So if 
			you check-in new project to the your <strong>Source Control</strong>, you can easily 
			sync your changes. 
			</p>
			<p>
			In the similar manner I can create applications in any custom location as I wish. 
			</p>
			
			<p>
			As another option, what you can do is create a general project in to the root location, 
			i.e <strong>AcmeSuper</strong>. 
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted14.png"></img>
				<br></br>
			</p>
			<p>
			Since we create the service we need inside <strong>Colombo</strong> folder previously, once you create the 
			project in the parent level, that projects will also be displayed. 
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted15.png"></img>
				<br></br>
			</p>
			<p>
			Suppose I want to create <strong>Data Service</strong> inside <strong>Kandy</strong> branch, so I will 
			<strong>right</strong> click on the folder and select <strong>Data Service</strong> from 
			the right click menu.
			</p>
				<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted16.png"></img>
				<br></br>
			</p>
			<p>
			In the similar way, you can create any kind of applications in the folder structure as you wish. Once 
			you create your applications, you can create <strong>Carbon Application projects</strong> 
			to group them. You can create separate <strong>Carbon Application Projects</strong> to each and 
			every branch or you can create a single <strong>Carbon Application Project</strong> to 
			<strong>AcmeSuper</strong> which will depend on your requirement.
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted18.png"></img>
				<br></br>
			</p>
			<p>
			Let's go back and see what happened to our folder structure which was in-sync with the 
			<strong>source control</strong>. 
			</p>
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/gettingStarted19.png"></img>
				<br></br>
			</p>
			<p>
			As you can see, all the new projects are being added. So in a collaborative Development 
			Environment, developers from different branches can work simultaneously without an issue. 
			</p>
			<p>
			With the <strong>Carbon Application</strong> projects, you can generate the 
			<strong>Carbon Application Archives (CAR)</strong> files which can be deployed to 
			<strong>Carbon Servers</strong>.
			</p>
			
			<h2 id="ImportProjects">Import existing WSO2 Project types to WSO2 Developer Studio Workspace</h2>
			
			<p>
			Let's consider a scenario related to Collaborative Development Environement. 
			
				<br/>
			There are one or more developers who works on the same code base actively at any given time. Developer A, create
			 a hierarchycal project with several sub projects nested under Parent project and Checkin the generated project 
			hierarchy to Source Control System (E.g: Subversion). 
			</p>
			
			<p>
				<br></br>
				<img alt="New Server Runtime" src="images/svn.png"></img>
				<br></br>
			</p>
			
			<p>
			
			Then the Developer B, want to add some other sub projects under parent project. Hence Developer B, first Checkout
			 the source generated and CheckedIn by Developer A. Then Developer B can Import the CheckedOut source to 
			 Developer Studio.    
			</p>
			
			<p>
			In order to Import the Existing WSO2 Project types to workspace, first <strong>Right Click</strong> on the 
			<strong>Project Explorer</strong> and select <strong>Import</strong>. Then it will populate another Pop Up menu.
			Select <strong>Import</strong> in that menu as well.
			</p>
			
			<p>
				<br></br>
				<img alt="Project Import" src="images/Import1.png"></img>
				<br></br>
			</p>
			
			<p>
			Then you will get the <strong>Eclipse Project Import Wizard</strong> and there you will see a new category called 
			<strong>WSO2</strong>. When you expand the <strong>WSO2</strong> category, you will see the option of importing
			<strong>Existing WSO2 Projects in to workspace</strong> option. 
			</p>
			
			<p>
				<br></br>
				<img alt="Project Import" src="images/Import2.png"></img>
				<br></br>
			</p>
			
			<p>
			Once you select the option of <strong>Existing WSO2 Projects in to workspace</strong> and click on <strong>Next</strong>,
			you can see the standard Eclipse Import project wizard pops up. 
			</p>
			
			<p>
				<br></br>
				<img alt="Project Import" src="images/Import3.png"></img>
				<br></br>
			</p>
			
			<p>
			You can select the <strong>Browse</strong> button in the dialog and point to the CheckedOut source code location and click 
			on <strong>OK</strong>.
			</p>
			
			<p>
				<br></br>
				<img alt="Project Import" src="images/Import4.png"></img>
				<br></br>
			</p>
			
			<p>
			Then you will see the Import Projects wizard shows all the WSO2 projects in your source code location. Then you can 
			select the WSO2 project you need to import to the workspace and click on <strong>Finish</strong>. 
			</p>
			
			<p>
				<br></br>
				<img alt="Project Import" src="images/Import5.png"></img>
				<br></br>
			</p>
			
			<p>
			Then you can see your WSO2 projects are imported in to the workspace in the correctly in the same order Developer A
			created.
			</p>
			
			<p>
				<br></br>
				<img alt="Project Import" src="images/Import6.png"></img>
				<br></br>
			</p>
			
	</body>
</html>

