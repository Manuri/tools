<!-- ~ Copyright 2005-2013 WSO2, Inc. (http://wso2.com) ~ ~ Licensed under 
	the Apache License, Version 2.0 (the "License"); ~ you may not use this file 
	except in compliance with the License. ~ You may obtain a copy of the License 
	at ~ ~ http://www.apache.org/licenses/LICENSE-2.0 ~ ~ Unless required by 
	applicable law or agreed to in writing, software ~ distributed under the 
	License is distributed on an "AS IS" BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS 
	OF ANY KIND, either express or implied. ~ See the License for the specific 
	language governing permissions and ~ limitations under the License. -->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<body>
		<h1>Synchronization of Dependencies between Eclipse Project and Maven pom.xml</h1>
		<div class="toc">
			<ul>
				<li>
					<a href="#introduction">Introduction</a>
				</li>
				<li>
					<a href="#projectToPom">Synchronize Eclipse Project Dependencies with Maven pom.xml</a>
				</li>
				<li>
					<a href="#pomToProject">Synchronize Maven Dependencies with Eclipse Project </a>
				</li>
			</ul>
		</div>
		<h2 id="introduction">Introduction</h2>
		<p>When you are working with software projects in Eclipse, you often find in situations where you need to refer some 3rd party
		libraries in your project. Since your source code is using the APIs and utilities exposed by these 3rd party libraries, you need to
		add these libraries to Eclipse project classpath (Project Buildpath) as Dependencies in order to continue the development without 
		compilation errors in the Eclipse IDE.
		
		But if you are using Maven as your build tool, in order to compile your source code successfully you need to add these same set of 
		libraries as Maven Dependencies in your Maven pom.xml file.
		
		Usually maintaining both Eclipse project and Maven pom.xml is a tedious task and it is a maintenance overhead when your project keep on 
		growing.
		
		Therefore we have implemented a feature which allows you to make this process easy and manageable where you can update your Maven 
		pom.xml with latest set of libraries used in the Eclipse project with couple of clicks. 
		
		Along with this feature we have improved our WSO2 Eclipse projects to include all the Maven metadata in order to sync the dependencies 
		declared in pom.xml with Eclipse project without losing any other project metadata. Thus you can update your pom.xml with the new 
		Maven dependencies and run a simple Maven command and it will preserve your existing Project Metadata while updating the project classpath
		with new libraries. 
		</p>
		<h2 id="projectToPom">Synchronize Eclipse Project Dependencies with Maven pom.xml</h2>
		<p>In this feature as we have mentioned in the introduction section you can update your projects Maven pom.xml with the current set of
		3rd party libraries added in to your Eclipse Project buildpath.
		</p>
		<p>
		As shown in the image below your current Eclipse project buildpath and Maven pom.xml will contain the same set of dependencies.
		</p>
		<p>
			<br></br>
			<img alt="MavenSync" src="images/MavenStart.png"></img>
			<br></br>
		</p>
		<p>
		Then you will add another 3rd party library ti your Eclipse project Buildpath. As you can see in the image below, now the Eclipse
		Project has a new library but it is not included in the Maven pom.xml
		</p>
		<p>
			<br></br>
			<img alt="MavenSync" src="images/MavenProjClasspath.png"></img>
			<br></br>
		</p>
		<p>
		Now when you want to Sync the Eclipse project classpath libraries with Maven pom.xml you need to follow the instructions mentioned below 
		(See the image).
		</p>
		<ol>
			<li>Select the Eclipse project you want to Sync</li>
			<li>Right Click on the Project and Select <strong>Maven</strong> and then select 
			<strong>Sync Project Dependencies with pom.xml</strong>option.</li>
		</ol>
		<p>
			<br></br>
			<img alt="MavenSync" src="images/MavenSync.png"></img>
			<br></br>
		</p>
		<p>
		Once follow above instructions as shown in the image you will notice that your pom.xml is updated with missing Maven Dependencies as shown
		in the image below.
		</p>
		<p>
			<br></br>
			<img alt="MavenSync" src="images/MavenProjectToPomSynced.png"></img>
			<br></br>
		</p>
	</body>
</html>