<!--
~ Copyright 2005-2007 WSO2, Inc. (http://wso2.com) ~ ~ Licensed under
the Apache License, Version 2.0 (the "License"); ~ you may not use
this file except in compliance with the License. ~ You may obtain a
copy of the License at ~ ~ http://www.apache.org/licenses/LICENSE-2.0
~ ~ Unless required by applicable law or agreed to in writing,
software ~ distributed under the License is distributed on an "AS IS"
BASIS, ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
or implied. ~ See the License for the specific language governing
permissions and ~ limitations under the License.
-->
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.1//EN"
        "http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
	<body>

		<h1>WSO2 Developer Studio Maven Support</h1>
		
		<h2>Content</h2>
		<div class="toc">
			<ul>
				<li>
					<a href="#MavenArtifacts">Maven support for Deployable Artifacts</a>
				</li>
				<li>
					<a href="#MavenMultiModule">Maven Multi Module Project</a>
				</li>
				<li>
					<a href="sync_eclipse_project_with_pom.html">Synchronization of Dependencies between Eclipse Project and Maven pom.xml</a>
				</li>
			</ul>
		</div>
		
		<h2 id="MavenArtifacts">Maven support for Deployable Artifacts</h2>
		<p>
		For each and every project created by <strong>WSO2 Developer Studio</strong>, you can 
		find a <strong>pom</strong> file has been created in order to build it using 
		<strong>Maven</strong>. 
		</p>
		
		<p>
			<br></br>
			<img alt="New Server Runtime" src="images/maven1.png"></img>
			<br></br>
		</p>
		
		<p>
		To build individual level <strong>Deployable Artifacts</strong> using maven command, go to the project 
		location in the command line and run the command <strong>mvn clean install</strong>. Once the build was 
		successful, you will see the <strong>Deployable Artifact</strong> has been created under 
		<strong>target</strong> folder of your project location.
		</p>
		
		
		<p>
			<br></br>
			<img alt="New Server Runtime" src="images/maven2.png"></img>
			<br></br>
		</p>
		<p>
		Following deployable artifacts will be generated when you run the maven command.
		</p>
		
		<table border="2">
			<tbody>
				<tr>
					<td><strong>Artifact Type</strong></td>
					<td><strong>Project Type</strong></td>
				</tr>
				<tr>
					<td>Apache Axis2 Artifact</td>
					<td>Axis2 Archive [aar]</td>
				</tr>
				<tr>
					<td>Web Application</td>
					<td>Web Application Archive [war]</td>
				</tr>
				<tr>
					<td>JAX-WS Artifact</td>
					<td>Java Archive [jar]</td>
				</tr>
				<tr>
					<td>Endpoint Artifact</td>
					<td>xml</td>
				</tr>
				<tr>
					<td>Sequence Artifact</td>
					<td>xml</td>
				</tr>
				<tr>
					<td>Proxy Service Artifact</td>
					<td>xml</td>
				</tr>
				<tr>
					<td>Local Entry Artifact</td>
					<td>xml</td>
				</tr>
				<tr>
					<td>Synapse Configuration</td>
					<td>xml</td>
				</tr>
				<tr>
					<td>ESB Mediator</td>
					<td>Java Archive [jar]</td>
				</tr>
				<tr>
					<td>Registry Resource</td>
					<td>Registry Resource with necessary meta-data</td>
				</tr>
				<tr>
					<td>Registry Handler Artifact</td>
					<td>OSGI Bundle [jar]</td>
				</tr>
				<tr>
					<td>Registry Filter Artifact</td>
					<td>OSGI Bundle [jar]</td>
				</tr>
				<tr>
					<td>Data Service Artifact</td>
					<td>Data Services Descriptor file [dbs]</td>
				</tr>
				<tr>
					<td>Data Services Validator Artifact</td>
					<td>OSGI Bundle [jar]</td>
				</tr>
				<tr>
					<td>BPEL Workflow</td>
					<td>BPEL Archive [zip]</td>
				</tr>
				<tr>
					<td>Gadget</td>
					<td>Dashboard Archive [dar]</td>
				</tr>
				<tr>
					<td>Carbon UI Bundle</td>
					<td>OSGI Bundle [jar]</td>
				</tr>
				<tr>
					<td>Third Party Library Artifact</td>
					<td>OSGI Bundle [jar]</td>
				</tr>
				<tr>
					<td>Carbon Application Project</td>
					<td>Carbon Application Archive [CAR]</td>
				</tr>
			</tbody>
		</table>
		
		<h2 id="MavenMultiModule">Maven Multi Module Project</h2>
				
		<p>
		As you are already aware of,<strong>WSO2 Developer Studio</strong> creates separate projects
		for most of the <strong>Deployable Artifacts</strong> with a Maven pom file  for each 
		<strong>Artifact</strong>. But if you consider Maven centric development, there we have a  
		Parent Project and then we have couple of Child Modules and a separate Distribution Module
		which is again a Child module of the Parent Project.
		</p>
		<p>
		In our attempt to support Maven Centric development in WSO2 Developer Studio, we have introduced
		this concept of <strong>Maven Multi Module project</strong> to <strong>WSO2 Developer Studio</strong>.
		You can create a Maven <strong>Multi Module Project</strong> in your workspace and then create your 
		Artifact Projects inside that <strong>Maven Multi Module project</strong> in a nested manner and then
		 create the Carbon Application Project which is the Distribution module for WSO2 platform. 
		</p>
		<p>
		It is also possible to convert an existing project in to Maven Multi Module Project as well.
		</p>
		<div>
			<ul>
				<li>
					<a href="#CreateMaven">Creating a new Maven Multi Module Project</a>
				</li>
				<li>
					<a href="#ConvertMaven">Convert an existing Project in to a Maven Multi Module Project</a>
				</li>
				
			</ul>
		</div>
		
		<h3 id="CreateMaven">Creating a new Maven Multi Module Project</h3>
		
		<p>
		You can create a Maven Multi Module Project by selecting <strong>File</strong> then <strong>New</strong> 
		and selecting <strong>Project</strong>. When you follow these steps, you get the Eclipse New Project
		Wizard.
		</p>
		<p>
		In the Eclipse New Project Wizard, you can see the <strong>WSO2</strong> main category and under that
		you can see <strong>Maven Project</strong> sub category. <strong>Maven Multi Module Project</strong> option
		is listed under <strong>Maven Project</strong> sub category.
		</p>
		
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj1.png"></img>
			<br></br>
		</p>
		
		<p>
		When you select the <strong>Maven Multi Module Project</strong> option and select <strong>Next</strong>, then
		you will get a new Maven Multi Module Project Wizard.
		</p>
		
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj2.png"></img>
			<br></br>
		</p>
		
		<p>
		Unlike other Projects you have seen in WSO2 Developer Studio, in this Project Wizard you need to provide Maven 
		information such as <strong>GroupID</strong>, <strong>ArtifactId</strong> and <strong>Version</strong>. In this 
		case if you are wondering what is going to be your <strong>Project Name</strong>, it would be the <strong>ArtifactId</strong>.
		</p>
		<p>
		Then you can select the Modules you need to include in your <strong>Maven Multi Module Project</strong> by 
		selecting the Projects from the list of Projects populated in the Wizard.
		</p>	
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj3.png"></img>
			<br></br>
		</p>
		
		<p>
		 you can click <strong>Finish</strong> to complete the wizard.If you open the <strong>pom.xml</strong>you
		 can see the selected projects have been listed as<strong>maven modules</strong>
		</p>	
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj4.png"></img>
			<br></br>
		</p>
		
		<h3 id="ConvertMaven">Convert an existing Project in to a Maven Multi Module Project</h3>
		
		<p>Right Click on the project and select the <strong>GeneratePOM</strong> from the menu</p>
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj5.png"></img>
			<br></br>
		</p>
		<p>
		Then you can select the Modules you need to include in your <strong>Maven Multi Module Project</strong> by 
		selecting the Projects from the list of Projects populated in the Wizard.
		</p>	
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj6.png"></img>
			<br></br>
		</p>
		<p>
		 you can complete the wizard by clicking the <strong>Finish</strong> button of the wizard.If you open the <strong>pom.xml</strong>you
		 can see the selected projects have been listed as<strong>maven modules</strong>
		</p>	
		<p>
			<br></br>
			<img alt="Maven Project" src="images/MavenPrj7.png"></img>
			<br></br>
		</p>
	</body>
</html>
