Index: src/main/java/org/wso2/maven/car/artifact/utils/CAppArtifact.java
===================================================================
--- src/main/java/org/wso2/maven/car/artifact/utils/CAppArtifact.java	(revision 94435)
+++ src/main/java/org/wso2/maven/car/artifact/utils/CAppArtifact.java	(working copy)
@@ -16,18 +16,18 @@
 
 package org.wso2.maven.car.artifact.utils;
 
+import org.apache.axiom.om.OMDocument;
+import org.apache.axiom.om.OMElement;
+import org.apache.maven.model.Dependency;
+import org.apache.maven.plugin.MojoExecutionException;
+import org.apache.maven.project.MavenProject;
+
 import java.io.ByteArrayOutputStream;
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
 import java.util.Map;
 
-import org.apache.axiom.om.OMDocument;
-import org.apache.axiom.om.OMElement;
-import org.apache.maven.model.Dependency;
-import org.apache.maven.plugin.MojoExecutionException;
-import org.apache.maven.project.MavenProject;
-
 public class CAppArtifact extends AbstractXMLDoc{
 
 	private MavenProject project;
@@ -50,7 +50,7 @@
 		setProject(project);
 		setServerRole(serverRole);
 	}
-	
+
 	public String getId(){
 		return getProject().getGroupId()+":"+getProject().getArtifactId()+":"+getProject().getVersion();
 	}
@@ -185,7 +185,15 @@
 	}
 
 	public OMElement getDocumentElement() throws MojoExecutionException {
+        OMElement rootEle = null;
+        if(isRoot()){
+            rootEle = getElement("artifacts", "");
+        }
 		OMElement documentElement = getElement("artifact", "");
+
+        if(isRoot()){
+            rootEle.addChild(documentElement);
+        }
 		addAttribute(documentElement, "name", getName());
 		addAttribute(documentElement, "version", getVersion());
 		addAttribute(documentElement, "type", getType());
@@ -204,6 +212,9 @@
 			}
 			documentElement.addChild(dependecyElement);
 		}
+        if(isRoot()){
+            return rootEle;
+        }
 		return documentElement;
 	}
 
Index: src/main/java/org/wso2/maven/car/artifact/utils/AbstractManifest.java
===================================================================
--- src/main/java/org/wso2/maven/car/artifact/utils/AbstractManifest.java	(revision 94435)
+++ src/main/java/org/wso2/maven/car/artifact/utils/AbstractManifest.java	(working copy)
@@ -21,23 +21,34 @@
 import java.util.Observable;
 
 public abstract class AbstractManifest extends Observable {
+    private boolean root;
 
 	public File toFile() throws Exception {
 		try {
 	        File tmpFolder = FileUtils.createTempDirectory();
-	        return toFile(new File(tmpFolder,getDefaultName()));
+	        return toFile(new File(tmpFolder,getDefaultName()), false);
         } catch (IOException e) {
 	        throw e;
         }
     }
 
-	public File toFile(File manifestFile) throws IOException {
+	public File toFile(File manifestFile, boolean isRoot) throws IOException {
 		if (manifestFile.exists()){
 			manifestFile.delete();
 		}
+        setRoot(isRoot);
+        System.out.println(toString());
 	    FileUtils.createFile(manifestFile, toString());
 	    return manifestFile;
     }
 	
 	protected abstract String getDefaultName();
+
+    public boolean isRoot() {
+        return root;
+    }
+
+    public void setRoot(boolean root) {
+        this.root = root;
+    }
 }
Index: src/main/java/org/wso2/maven/car/artifact/CARMojo.java
===================================================================
--- src/main/java/org/wso2/maven/car/artifact/CARMojo.java	(revision 94435)
+++ src/main/java/org/wso2/maven/car/artifact/CARMojo.java	(working copy)
@@ -1,11 +1,5 @@
 package org.wso2.maven.car.artifact;
 
-import java.io.File;
-import java.io.IOException;
-import java.util.HashMap;
-import java.util.List;
-import java.util.Map;
-
 import org.apache.maven.artifact.factory.ArtifactFactory;
 import org.apache.maven.artifact.repository.ArtifactRepository;
 import org.apache.maven.artifact.resolver.ArtifactResolver;
@@ -14,12 +8,14 @@
 import org.apache.maven.plugin.MojoFailureException;
 import org.apache.maven.project.MavenProject;
 import org.apache.maven.project.MavenProjectHelper;
-import org.wso2.maven.car.artifact.utils.CAppArtifact;
-import org.wso2.maven.car.artifact.utils.CAppArtifactDependency;
-import org.wso2.maven.car.artifact.utils.FileManagementUtil;
-import org.wso2.maven.car.artifact.utils.FileUtils;
-import org.wso2.maven.car.artifact.utils.MavenUtils;
+import org.wso2.maven.car.artifact.utils.*;
 
+import java.io.File;
+import java.io.IOException;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
 /**
  * Create a bpel artifact from Maven project
  *
@@ -90,7 +86,7 @@
 		CAppArtifact cAppArtifact = new CAppArtifact(project,null);
 		collectArtifacts(cAppArtifact, cAppArtifactDependencies);
 		try {
-			cAppArtifact.toFile(new File(getArchiveDir(),"artifacts.xml"));
+			cAppArtifact.toFile(new File(getArchiveDir(),"artifacts.xml"), true);
 			for (CAppArtifactDependency cAppDependency : cAppArtifactDependencies.values()) {
 				createArtifactData(getArchiveDir(), cAppDependency);
 			}
@@ -107,7 +103,7 @@
 		File cappArtifactFile = cAppArtifactDependency.getCappArtifactFile();
 		File artifactFile = new File(artifactLocation,cAppArtifactDependency.getcAppArtifact().getFile());
 		FileUtils.copy(cappArtifactFile, artifactFile);
-		cAppArtifactDependency.getcAppArtifact().toFile(new File(artifactLocation,"artifact.xml"));
+		cAppArtifactDependency.getcAppArtifact().toFile(new File(artifactLocation,"artifact.xml"), false);
 	}
 	
 	private void collectArtifacts(CAppArtifact cAppArtifact, Map<String,CAppArtifactDependency> cAppArtifacts) throws MojoExecutionException{
